<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="LibertyAirDataSet7" targetNamespace="http://tempuri.org/LibertyAirDataSet7.xsd" xmlns:mstns="http://tempuri.org/LibertyAirDataSet7.xsd" xmlns="http://tempuri.org/LibertyAirDataSet7.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="LibertyAirConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="LibertyAirConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Customer.Properties.Settings.GlobalReference.Default.LibertyAirConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BranchesTableAdapter" GeneratorDataComponentClassName="BranchesTableAdapter" Name="Branches" UserDataComponentName="BranchesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LibertyAirConnectionString (Settings)" DbObjectName="LibertyAir.dbo.Branches" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Branches] WHERE (([BrID] = @Original_BrID) AND ([Center] = @Original_Center))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BrID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Center" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Center" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BrID, Center FROM dbo.Branches</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Branches] SET [BrID] = @BrID, [Center] = @Center WHERE (([BrID] = @Original_BrID) AND ([Center] = @Original_Center));
SELECT BrID, Center FROM Branches WHERE (BrID = @BrID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BrID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Center" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Center" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BrID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Center" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Center" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BrID" DataSetColumn="BrID" />
              <Mapping SourceColumn="Center" DataSetColumn="Center" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CountriesTableAdapter" GeneratorDataComponentClassName="CountriesTableAdapter" Name="Countries" UserDataComponentName="CountriesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LibertyAirConnectionString (Settings)" DbObjectName="LibertyAir.dbo.Countries" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CountryName FROM dbo.Countries</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CountryName" DataSetColumn="CountryName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StateTableAdapter" GeneratorDataComponentClassName="StateTableAdapter" Name="State" UserDataComponentName="StateTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LibertyAirConnectionString (Settings)" DbObjectName="LibertyAir.dbo.State" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StateName FROM dbo.State</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StateName" DataSetColumn="StateName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="LibertyAirDataSet7" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="LibertyAirDataSet7" msprop:Generator_UserDSName="LibertyAirDataSet7">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Branches" msprop:Generator_TableClassName="BranchesDataTable" msprop:Generator_TableVarName="tableBranches" msprop:Generator_TablePropName="Branches" msprop:Generator_RowDeletingName="BranchesRowDeleting" msprop:Generator_RowChangingName="BranchesRowChanging" msprop:Generator_RowEvHandlerName="BranchesRowChangeEventHandler" msprop:Generator_RowDeletedName="BranchesRowDeleted" msprop:Generator_UserTableName="Branches" msprop:Generator_RowChangedName="BranchesRowChanged" msprop:Generator_RowEvArgName="BranchesRowChangeEvent" msprop:Generator_RowClassName="BranchesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BrID" msprop:Generator_ColumnVarNameInTable="columnBrID" msprop:Generator_ColumnPropNameInRow="BrID" msprop:Generator_ColumnPropNameInTable="BrIDColumn" msprop:Generator_UserColumnName="BrID" type="xs:int" />
              <xs:element name="Center" msprop:Generator_ColumnVarNameInTable="columnCenter" msprop:Generator_ColumnPropNameInRow="Center" msprop:Generator_ColumnPropNameInTable="CenterColumn" msprop:Generator_UserColumnName="Center">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="16" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Countries" msprop:Generator_TableClassName="CountriesDataTable" msprop:Generator_TableVarName="tableCountries" msprop:Generator_TablePropName="Countries" msprop:Generator_RowDeletingName="CountriesRowDeleting" msprop:Generator_RowChangingName="CountriesRowChanging" msprop:Generator_RowEvHandlerName="CountriesRowChangeEventHandler" msprop:Generator_RowDeletedName="CountriesRowDeleted" msprop:Generator_UserTableName="Countries" msprop:Generator_RowChangedName="CountriesRowChanged" msprop:Generator_RowEvArgName="CountriesRowChangeEvent" msprop:Generator_RowClassName="CountriesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CountryName" msprop:Generator_ColumnVarNameInTable="columnCountryName" msprop:Generator_ColumnPropNameInRow="CountryName" msprop:Generator_ColumnPropNameInTable="CountryNameColumn" msprop:Generator_UserColumnName="CountryName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="State" msprop:Generator_TableClassName="StateDataTable" msprop:Generator_TableVarName="tableState" msprop:Generator_TablePropName="State" msprop:Generator_RowDeletingName="StateRowDeleting" msprop:Generator_RowChangingName="StateRowChanging" msprop:Generator_RowEvHandlerName="StateRowChangeEventHandler" msprop:Generator_RowDeletedName="StateRowDeleted" msprop:Generator_UserTableName="State" msprop:Generator_RowChangedName="StateRowChanged" msprop:Generator_RowEvArgName="StateRowChangeEvent" msprop:Generator_RowClassName="StateRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StateName" msprop:Generator_ColumnVarNameInTable="columnStateName" msprop:Generator_ColumnPropNameInRow="StateName" msprop:Generator_ColumnPropNameInTable="StateNameColumn" msprop:Generator_UserColumnName="StateName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Branches" />
      <xs:field xpath="mstns:BrID" />
    </xs:unique>
  </xs:element>
</xs:schema>